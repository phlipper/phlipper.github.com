<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: macports | phlipper's (dot) net]]></title>
  <link href="https://phlippers.net/blog/categories/macports/atom.xml" rel="self"/>
  <link href="https://phlippers.net/"/>
  <updated>2018-07-07T14:30:17-07:00</updated>
  <id>https://phlippers.net/</id>
  <author>
    <name><![CDATA[Phil Cohen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install PostgreSQL 9.2 on OS X Mountain Lion]]></title>
    <link href="https://phlippers.net/blog/2012/08/03/install-postgresql-9-dot-2-on-os-x-mountain-lion/"/>
    <updated>2012-08-03T13:08:00-07:00</updated>
    <id>https://phlippers.net/blog/2012/08/03/install-postgresql-9-dot-2-on-os-x-mountain-lion</id>
    <content type="html"><![CDATA[<p>The <a href="http://www.postgresql.org">PostgreSQL</a> database keeps getting better with each release. With 9.2 now at beta2, it's a great time to jump in and get up to speed.</p>

<h2>Prerequisites</h2>

<p>This guide assumes the following:</p>

<ul>
<li>OS X Mountain Lion</li>
<li>The latest XCode</li>
<li>XCode Command Line Tools</li>
<li>The latest <a href="http://www.macports.org">MacPorts</a></li>
</ul>


<h2>Installation</h2>

<p>Make sure MacPorts is up to date, then install the <code>postgresql92-server</code> port:</p>

<pre><code>$ sudo port -v selfupdate
$ sudo port -v install postgresql92-server
</code></pre>

<h2>Setup the Initial Database</h2>

<p>Once the server has been installed, you will need to create the initial database:</p>

<pre><code>$ sudo mkdir -p /opt/local/var/db/postgresql92/defaultdb
$ sudo chown postgres:postgres /opt/local/var/db/postgresql92/defaultdb
$ sudo su postgres -c '/opt/local/lib/postgresql92/bin/initdb -D /opt/local/var/db/postgresql92/defaultdb'
</code></pre>

<h2>Starting the Server</h2>

<p>Once the initial database has been created, you can start the server.</p>

<p>To run the server manually, execute the following command:</p>

<pre><code>$ sudo su postgres -c '/opt/local/lib/postgresql92/bin/postgres -D /opt/local/var/db/postgresql92/defaultdb'
</code></pre>

<p>If you want the server to automatically start at boot time, execute the following command:</p>

<pre><code>$ sudo launchctl load -w /Library/LaunchDaemons/org.macports.postgresql92-server.plist
</code></pre>

<h2>Setup your PATH</h2>

<p>The executable files for PostgreSQL are in a non-standard location, so you you'll want to update your <code>PATH</code> to make things easier. Most likely, you'll want to edit your <code>~/.bashrc</code> or <code>~/.zshrc</code> (or similar) profile, though you can set apply the changes for all users system-wide by editing <code>/etc/profile</code>.</p>

<p>Make sure you set the new path <em>before</em> <code>/usr/bin</code> to ensure that you are using the latest versions and not the default apple-supplied tools:</p>

<p><code>bash
export PATH=/opt/local/lib/postgresql92/bin:$PATH
</code></p>

<p>You can verify this works by running <code>which psql</code> and you should see <code>/opt/local/lib/postgresql92/bin/psql</code> as the output.</p>

<h2>Create a New User</h2>

<p>You will be setup with a <code>postgres</code> user by default, but it is good practice to create a different user account.</p>

<p>To make things easy, create a new database user to match your OS X username:</p>

<pre><code>$ createuser --superuser &lt;my username&gt; -U postgres
</code></pre>

<p>You should now be able to create a new database:</p>

<pre><code>$ createdb my_app
</code></pre>

<p>Do please consider setting a password for your newly-created user ;)</p>

<h2>Configuring a Rails Application</h2>

<p>To setup your Rails application with PostgreSQL, you will need to do the following:</p>

<ul>
<li>Add the <code>pg</code> gem to your <code>Gemfile</code> and run the <code>bundle</code> command</li>
</ul>


<p>```ruby Gemfile
source :rubygems</p>

<p>gem "rails"
gem "pg"</p>

<h1>...</h1>

<p>```</p>

<ul>
<li>Configure your <code>database.yml</code> to use PostgreSQL:</li>
</ul>


<p>```yaml config/database.yml
development:
  adapter: postgresql
  encoding: unicode
  host: localhost
  database: myapp_development
  username: &lt;%= ENV["USER"] %>
  password:
  allow_concurrency: true
  pool: 5
  min_messages: warning</p>

<p>test:
  adapter: postgresql
  encoding: unicode
  host: localhost
  database: myapp_test
  username: &lt;%= ENV["USER"] %>
  password:
  allow_concurrency: true
  pool: 5
  min_messages: error
```</p>

<p>Even if you have set the <code>min_messages</code> option, you may still see console output like the following:</p>

<pre><code>WARNING:  there is already a transaction in progress
</code></pre>

<p>Edit the file <code>/opt/local/var/db/postgresql92/defaultdb/postgresql.conf</code> and set the following:</p>

<pre><code>client_min_messages = error
</code></pre>

<p>Everything should now be running smoothly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrading to Mountain Lion - Ruby + MacPorts]]></title>
    <link href="https://phlippers.net/blog/2012/07/25/upgrading-to-mountain-lion-ruby-plus-macports/"/>
    <updated>2012-07-25T23:25:00-07:00</updated>
    <id>https://phlippers.net/blog/2012/07/25/upgrading-to-mountain-lion-ruby-plus-macports</id>
    <content type="html"><![CDATA[<p>My colleague Kenny Johnston wrote a nice piece about <a href="http://coderwall.com/p/dtbuqg">Upgrading to Mountain Lion</a> with an emphasis on using Homebrew. Here are the relevant steps using MacPorts:</p>

<h2>XCode:</h2>

<ul>
<li>Update to the latest XCode 4.4 from the App Store</li>
<li>Install the Command Line Tools</li>
</ul>


<p>Of course, since it is zero-day, there was an issue fetching the Command Line Tools from the server and I had to install manually from a <code>.pkg</code> file retrieved from the Apple Developer Portal. If you install the CLI tools package manually, you may need to run the following:</p>

<pre><code>sudo xcodebuild -license
</code></pre>

<p>That is required to accept the license terms system-wide.</p>

<h2>MacPorts</h2>

<p>First, you'll need to update the base MacPorts installation:</p>

<pre><code>sudo port -v selfupdate
</code></pre>

<p>If you run in to a compilation error, you may need to edit the file <code>/opt/local/etc/macports/macports.conf</code> and set the <code>developer_dir</code> option to be empty:</p>

<pre><code>sudo vim /opt/local/etc/macports/macports.conf
</code></pre>

<p>```bash /opt/local/etc/macports/macports.conf</p>

<h1>Directory containing Xcode Tools (default is to ask xcode-select)</h1>

<h1>developer_dir       /Developer</h1>

<p>developer_dir
```</p>

<p>You should now be able to update any outdated ports (grab a beverage while you wait):</p>

<pre><code>sudo port -vu upgrade outdated
</code></pre>

<h2>GCC 4.2</h2>

<p>Now install the <code>apple-gcc42</code> port to replace the missing GCC 4.2 in Mountain Lion:</p>

<pre><code>sudo port install -vu apple-gcc42
</code></pre>

<p>Once that has been installed, you will need to link it to the expected system location:</p>

<pre><code>sudo ln -s /opt/local/bin/gcc-apple-4.2 /usr/bin/gcc-4.2
</code></pre>

<h2>RVM</h2>

<p>Make sure you have the latest RVM version installed:</p>

<pre><code>curl -L https://get.rvm.io | bash -s stable
</code></pre>

<p>You should now ensure that you can rebuild your installed Ruby versions:</p>

<pre><code>rvm reinstall 1.9.3
rvm reinstall rbx
...
</code></pre>

<p>You may need to reference my earlier tip: <a href="http://phlippers.net/blog/2012/07/10/fix-ruby-1-dot-9-x-openssl-segfault-on-os-x/">Fix Ruby 1.9.x OpenSSL Segfault on OS X</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Downgrade MacPorts Boost from version 1.50.0 to 1.49.0]]></title>
    <link href="https://phlippers.net/blog/2012/07/16/downgrade-macports-boost-version-1-dot-50-dot-0/"/>
    <updated>2012-07-16T15:27:00-07:00</updated>
    <id>https://phlippers.net/blog/2012/07/16/downgrade-macports-boost-version-1-dot-50-dot-0</id>
    <content type="html"><![CDATA[<p>If you have updated <a href="http://www.boost.org/">Boost</a> to version 1.50.0 via MacPorts, you may have encountered something like the following:</p>

<pre><code>$ port installed | grep mongodb
  mongodb @2.0.6_0 (active)
$ port installed | grep boost
  boost @1.50.0_0 (active)
$ mongo
dyld: Symbol not found: __ZNK5boost15program_options16validation_error4whatEv
  Referenced from: /opt/local/bin/mongo
  Expected in: /opt/local/lib/libboost_program_options-mt.dylib
 in /opt/local/bin/mongo
</code></pre>

<p>There are numerous reports on the MacPorts Trac with various ports that are affected. Here is the solution that worked for me:</p>

<pre><code>$ cd /tmp
$ svn co  -r 93341 'http://svn.macports.org/repository/macports/trunk/dports/devel/boost/'
A    boost/files
A    boost/files/patch-boost-foreach.diff
A    boost/files/patch-thread_visibility.diff
A    boost/files/patch-libs-mpi-build-Jamfile.v2.diff
A    boost/files/patch-tools-build-v2-tools-python-2.jam.diff
A    boost/files/patch-tools-build-v2-tools-python.jam.diff
A    boost/files/patch-bootstrap.sh.diff
A    boost/files/patch-tools_build_v2_engine_src_build.jam.diff
A    boost/files/patch-libs-python-src-converter-builtin_converters.cpp
A    boost/files/patch-tools_build_v2_engine_src_build.sh.diff
A    boost/Portfile
Checked out revision 93341.

$ cd boost
$ sudo port install
---&gt;  Computing dependencies for boost
---&gt;  Fetching archive for boost
---&gt;  Attempting to fetch boost-1.49.0_0.darwin_10.x86_64.tbz2 from http://packages.macports.org/boost
---&gt;  Attempting to fetch boost-1.49.0_0.darwin_10.x86_64.tbz2.rmd160 from http://packages.macports.org/boost
---&gt;  Installing boost @1.49.0_0
---&gt;  Deactivating boost @1.50.0_0
---&gt;  Cleaning boost
---&gt;  Activating boost @1.49.0_0
---&gt;  Cleaning boost

$ sudo port activate boost @1.49.0_0
---&gt;  Computing dependencies for boost
---&gt;  Cleaning boost
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL gem 2.7 with Ruby 1.8.7 and MacPorts]]></title>
    <link href="https://phlippers.net/blog/2012/07/12/mysql-gem-2-dot-7-with-ruby-1-dot-8-7-and-macports/"/>
    <updated>2012-07-12T13:37:00-07:00</updated>
    <id>https://phlippers.net/blog/2012/07/12/mysql-gem-2-dot-7-with-ruby-1-dot-8-7-and-macports</id>
    <content type="html"><![CDATA[<p>I recently had to reinstall the <code>mysql</code> gem version 2.7 in to following environment:</p>

<ul>
<li>Ruby 1.8.7</li>
<li>OS X 10.7</li>
<li>MacPorts MySQL 5</li>
</ul>


<p>I needed to look up this incantation for the Nth time so I am recording it here:</p>

<p><code>bash gem install
env ARCHFLAGS="-arch x86_64" gem install mysql -v 2.7 -- --with-mysql-config=/opt/local/lib/mysql5/bin/mysql_config
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fix Ruby 1.9.x OpenSSL Segfault on OS X]]></title>
    <link href="https://phlippers.net/blog/2012/07/10/fix-ruby-1-dot-9-x-openssl-segfault-on-os-x/"/>
    <updated>2012-07-10T22:37:00-07:00</updated>
    <id>https://phlippers.net/blog/2012/07/10/fix-ruby-1-dot-9-x-openssl-segfault-on-os-x</id>
    <content type="html"><![CDATA[<p>If you install Ruby 1.9.2 or 1.9.3 on OS X, you may run in to the dreaded OpenSSL segfault:</p>

<pre><code>~/ruby-1.9.3-p194/lib/ruby/1.9.1/net/http.rb:799: [BUG] Segmentation fault
ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin11.4.0]
</code></pre>

<p>The version of OpenSSL that ships with OS X 10.6 and 10.7 is older and causes this issue.</p>

<p>There are a number of options solve this. Here a few:</p>

<p><strong>MacPorts</strong></p>

<pre><code>$ port selfupdate
$ port install openssl
$ port install libyaml

# RVM
$ rvm install 1.9.3 --with-openssl-dir=/opt/local --with-opt-dir=/opt/local

# rbenv
$ CONFIGURE_OPTS='--with-openssl-dir=/opt/local --with-opt-dir=/opt/local' rbenv install 1.9.3-p194
</code></pre>

<p><strong>Homebrew</strong></p>

<pre><code>$ brew update
$ brew install openssl

# RVM
$ rvm install 1.9.3 --with-openssl-dir=`brew --prefix openssl`

# rbenv
$ CONFIGURE_OPTS="--with-openssl-dir=`brew --prefix openssl`" rbenv install 1.9.3-p194
</code></pre>

<p><strong>RVM</strong></p>

<pre><code>$ rvm pkg install openssl
$ rvm reinstall 1.9.3 --with-openssl-dir=$rvm_path/usr
</code></pre>
]]></content>
  </entry>
  
</feed>
